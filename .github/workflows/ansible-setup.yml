name: Deploy to Bastion EC2

on:
  push:
    branches:
      - main
    paths:
      - "ansible/**"

permissions:
  id-token: write   
  contents: read  

jobs:
  # Deploy files to bastion ec2
  deploy_files:
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v3

      - name: Zip files for transfer
        run: zip -r ansible.zip ansible/

      - name: Upload files to a temporary HTTP server
        uses: actions/upload-artifact@v3
        with:
          name: ansible-files
          path: ansible.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: eu-west-1

      - name: Fetch files directly on EC2 via SSM
        run: |
          # Get the download URL for the latest artifact
          ARTIFACT_URL=$(gh api /repos/${{ github.repository }}/actions/artifacts \
            --jq '.artifacts[] | select(.name=="ansible-files") | .archive_download_url' \
            -H "Accept: application/vnd.github+json")
          
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceIds,Values=${{ secrets.BASTION_INSTANCE_ID }}" \
            --parameters "commands=[\"curl -L -o ~/ansible.zip '$ARTIFACT_URL'\",\"unzip -o ~/ansible.zip -d ~/ansible/\"]" \
            --comment "Deploy Ansible files"

      - name: Cleanup local files
        run: rm -rf ansible.zip

  setup_ec2:
    name: Setup EC2 Instances
    runs-on: ubuntu-latest
    needs: deploy_files 
    steps:
      - name: Install Ansible and Python on EC2s
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceIds,Values=${{ secrets.BASTION_INSTANCE_ID }}" \
            --parameters '{"commands":["sudo yum update -y", "sudo yum install -y python3", "sudo alternatives --set python /usr/bin/python3", "sudo pip3 install ansible"],"executionTimeout":["300"]}' \
            --comment "Installing Python and Ansible" \
            --output text \
            --query "Command.CommandId"

  execute_ansible:
    name: Execute Ansible Playbook
    runs-on: ubuntu-latest
    needs: setup_ec2
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ~/ansible/inventory/hosts ~/ansible/playbooks/install_haproxy.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
